- title 'Blog', false

- content_for :sidebar do

  - if can? :create, Post
    = link_to [:new, :post], class: 'btn btn-success btn-block' do
      %i.fa.fa-plus.fa-inverse
      New Blog Post
    - if params[:unpublished].present?
      = link_to :posts, class: 'btn btn-info btn-block' do
        %i.fa.fa-picture-o.fa-inverse
        Published Posts
    - elsif Post.published(false).count > 0
      = link_to posts_path(unpublished: true), class: 'btn btn-info btn-block' do
        %i.fa.fa-inverse.fa-calendar
        Scheduled Posts

    - if can? :index, :report

      %hr

      .panel.panel-default
        .panel-heading
          %h3.panel-title Vistors
        .panel-body
          %ul.ul-unstyled
            - LogEntry.blogs.includes(:user).where('users.role' => 'guest').created_at_desc.limit(8).each_with_index do |log_entry, i|
              %li
                %strong= log_entry.user.try(:name)
                &mdash;
                = time_tag log_entry.created_at, is: 'relative-time', title: l(log_entry.created_at) do
                  = time_ago_in_words log_entry.created_at
                  ago

      .panel.panel-default
        .panel-heading
          %h3.panel-title Comments
        .panel-body
          %ul.ul-unstyled
            - Comment.created_at_desc.limit(5).each_with_index do |comment, i|
              %li
                %strong= comment.user.try(:name)
                &mdash;
                = time_tag comment.created_at, is: 'relative-time', title: l(comment.created_at) do
                  = time_ago_in_words comment.created_at
                  ago

      - if Post.post_tag_counts.present?
        .panel.panel-default
          .panel-heading
            %h3.panel-title Tags
          .panel-body
            - tag_cloud(Post.tag_counts_on(:post_tags), %w(1 2 3 4)) do |tag, frequency|
              = link_to tag.name, posts_path(tag: tag.name), style: "font-size: #{frequency.to_i * 0.5}em"

      .panel.panel-default
        .panel-heading
          %h3.panel-title Search
        .panel-body
          = form_tag nil, method: :get, role: 'form' do
            .form-group
              = label_tag :ends_on, 'Date'
              = text_field_tag :ends_on, l(@ends_on), class: 'datepicker form-control'
            .form-group
              = label_tag :term
              = text_field_tag :term, params[:term], class: 'form-control', :placeholder => 'Search'
            = submit_tag 'Search', class: 'btn btn-primary btn-block'

- if @posts.empty?
  .row.clearfix
    %p Nothing to show. We're not that interesting.
- else
  - @posts.each do |post|
    = div_for post, class: 'hero-unit' do
      - if can? :update, post
        .btn-group.pull-right
          = link_to [:edit, post], class: 'btn btn-small' do
            %i.fa.fa-edit
            Edit
          = link_to post, class: 'btn btn-small', method: :delete, data: { confirm: 'Are you sure you want to delete this post?' } do
            %i.fa.fa-trash-o
            Delete
      %h2.clearfix=l post.at.to_date, format: :long
      .body
        :markdown
          #{post.body}
        - if post.photos.present?
          - if post.photos.size > 1
            %ul.thumbnails
              - post.photos.at_asc.each do |photo|
                - if photo.image?
                  = render photo, :group => "group-#{post.at.to_date}"
          - else
            - photo = post.photos.first
            = link_to photo.image.url, class: 'fancybox', rel: "group-#{post.at.to_date}", title: photo.description do
              = image_tag photo.resize_url(:medium), class: 'img-rounded'
      .comments
        = render post.comments.created_at_asc
        = form_for post.comments.new do |f|
          = f.text_area :body, rows: 2, class: 'span7', placeholder: 'If you have something to say, you can say it here.'
          = f.hidden_field :post_id
          %br
          = f.submit 'Comment', class: 'btn btn-primary'

= paginate @posts
