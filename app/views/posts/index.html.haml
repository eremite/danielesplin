- title 'Blog', false

- if can? :create, Post
  %p.pull-right{:style => 'margin-right: 1rem'}
    %br
    = link_to [:new, :post], class: 'btn btn-success' do
      %i.fa.fa-plus.fa-inverse
      New Blog Post
    - if params[:unpublished].present?
      = link_to :posts, class: 'btn btn-info' do
        %i.fa.fa-picture-o.fa-inverse
        Published
    - elsif Post.published(false).count > 0
      = link_to posts_path(unpublished: true), class: 'btn btn-info' do
        %i.fa.fa-inverse.fa-calendar
        Scheduled

  - if can? :index, :report
    .well.well-small
      - limit = 3
      %p
        - LogEntry.blogs.includes(:user).where('users.role' => 'guest').created_at_desc.limit(limit).each_with_index do |log_entry, i|
          #{log_entry.user.try(:name)}#{',' unless i.zero?}
          = 'checked the blog' if i.zero?
          = time_ago_in_words log_entry.created_at
          ago#{';' unless i + 1 == limit}
      %p{:style => 'margin-top: 0'}
        - Comment.created_at_desc.limit(limit).each_with_index do |comment, i|
          #{comment.user.try(:name)}#{',' unless i.zero?}
          = 'commented' if i.zero?
          = time_ago_in_words comment.created_at
          ago#{';' unless i + 1 == limit}

- if @posts.empty?
  .row.clearfix
    %p Nothing to show. We're not that interesting.
- else
  - @posts.each do |post|
    = div_for post, class: 'hero-unit' do
      - if can? :update, post
        .btn-group.pull-right
          = link_to [:edit, post], class: 'btn btn-small' do
            %i.fa.fa-edit
            Edit
          = link_to post, class: 'btn btn-small', method: :delete, data: { confirm: 'Are you sure you want to delete this post?' } do
            %i.fa.fa-trash-o
            Delete
      %h2.clearfix=l post.at.to_date, format: :long
      .body
        :markdown
          #{post.body}
        - if post.photos.present?
          - if post.photos.size > 1
            %ul.thumbnails
              - post.photos.at_asc.each do |photo|
                - if photo.image?
                  = render photo, :group => "group-#{post.at.to_date}"
          - else
            - photo = post.photos.first
            = link_to photo.image.url, class: 'fancybox', rel: "group-#{post.at.to_date}", title: photo.description do
              = image_tag photo.resize_url(:medium), class: 'img-rounded'
      .comments
        = render post.comments.created_at_asc
        = form_for post.comments.new do |f|
          = f.text_area :body, rows: 2, class: 'span7', placeholder: 'If you have something to say, you can say it here.'
          = f.hidden_field :post_id
          %br
          = f.submit 'Comment', class: 'btn btn-primary'

= paginate @posts
